name: Houndigrade CI/CD flow

env:
  IMAGE_NAME: docker.pkg.github.com/${{ github.repository }}/houndigrade
  IMAGE_NAME_COMMIT: docker.pkg.github.com/${{ github.repository }}/commits/houndigrade:${{ github.sha }}

on:
  push:
    branches:
    tags:
  pull_request:

jobs:
  test-py38:
    name: py38
    runs-on: ubuntu-latest
    container:
      image: python:3.8
    steps:
      - uses: actions/checkout@v2
      - run: pip install tox codecov poetry
      - run: tox -e py38
      - run: codecov

  test-flake8:
    name: flake8
    runs-on: ubuntu-latest
    container:
      image: python:3.8
    steps:
      - uses: actions/checkout@v2
      - run: pip install tox poetry
      - run: tox -e flake8

  test-docker:
    name: Docker Build
    runs-on: ubuntu-latest
    container:
      image: docker:latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - run: docker pull $IMAGE_NAME:latest || true
      - run: docker build --cache-from $IMAGE_NAME:latest .

  deploy-build-and-push-image:
    name: Build and Push Image
    if: github.ref == 'refs/heads/main'
    needs: [test-py38, test-flake8, test-docker]
    runs-on: ubuntu-latest
    container:
      image: docker:latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - run: docker pull $IMAGE_NAME:latest || true
      - run: docker build --cache-from ${IMAGE_NAME}:latest --tag ${IMAGE_NAME_COMMIT} --tag ${IMAGE_NAME}:latest .
      - run: docker push ${IMAGE_NAME_COMMIT}
      - run: docker push ${IMAGE_NAME}:latest

  deploy-build-and-push-tagged-image:
    name: Build and Push Tagged Image
    env:
      COMMIT_TAG: ${{ github.event.release.tag_name }}
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [test-py38, test-flake8, test-docker]
    runs-on: ubuntu-latest
    container:
      image: docker:latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - run: docker pull $IMAGE_NAME:latest || true
      - run: docker build --cache-from ${IMAGE_NAME}:latest --tag ${IMAGE_NAME}:${COMMIT_TAG} .
      - run: docker push ${IMAGE_NAME}:${COMMIT_TAG}
