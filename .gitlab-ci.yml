### STAGES ###
stages:
  - test
  - build

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

### GLOBAL VARS ###
variables:
  IMAGE_NAME: registry.gitlab.com/${CI_PROJECT_PATH}
  IMAGE_NAME_COMMIT: registry.gitlab.com/${CI_PROJECT_PATH}/commits/${CI_PROJECT_NAME}:${CI_BUILD_REF}
  DOCKER_DRIVER: overlay2

### TEST STAGE ###
Unit Tests:
  stage: test
  image: python:3.8
  before_script:
    - pip install tox codecov poetry
  script: tox -epy38
  after_script:
    - codecov

Flake8:
  stage: test
  image: python:3.8
  before_script:
    - pip install tox poetry
  script: tox -eflake8

Build Image:
  stage: test
  rules:
    - if: $CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - when: on_success
  image: docker
  services:
    - docker:dind
  script:
    - docker pull ${IMAGE_NAME}:latest || true
    - docker build --cache-from ${IMAGE_NAME}:latest .

### BUILD STAGE ###
Build and Push Image:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} registry.gitlab.com
  script:
    - docker pull ${IMAGE_NAME}:latest || true
    - docker build --cache-from ${IMAGE_NAME}:latest --tag ${IMAGE_NAME_COMMIT} --tag ${IMAGE_NAME}:latest .
    - docker push ${IMAGE_NAME_COMMIT}
    - docker push ${IMAGE_NAME}:latest

Build and Push Tagged Image:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull ${IMAGE_NAME}:latest || true
    - docker build --cache-from ${IMAGE_NAME}:latest --tag ${IMAGE_NAME}:${CI_COMMIT_TAG} .
    - docker push ${IMAGE_NAME}:${CI_COMMIT_TAG}
